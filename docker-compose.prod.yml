version: '3.3'

services:

  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    networks:
      - main
    ports:
      - "6379:6379"
    restart: on-failure
  db:
    container_name: postgres
    hostname: postgres
    image: postgres:12.0-alpine
    env_file:
      - ./.env.prod.db
    networks:
      - main
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    build: ./nginx
    container_name: nz01
    ports:
      - 80:80
    volumes:
      - static_volume:/home/banner_app/web/static
      - media_volume:/home/banner_app/web/media
    depends_on:
      - web
    networks:
      - main

  web:
    command: gunicorn banner_app.wsgi:application --timeout 500 --bind  0.0.0.0:8000
    container_name: web
    depends_on:
      - db
      - redis
    expose:
      - 8000
    volumes:
      - static_volume:/home/banner_app/web/static
      - media_volume:/home/banner_app/web/media
    hostname: web
    image: web-image
    networks:
      - main
    restart: on-failure
    env_file:
      - ./.env.prod

  celery-worker:
    command: sh -c "celery -A banner_app worker --loglevel=INFO -P solo"
    container_name: celery_worker
    depends_on:
      - web
      - db
      - redis
    hostname: celery_worker
    image: web-image
    networks:
      - main
    restart: on-failure
    volumes:
      - static_volume:/home/banner_app/web/static
      - media_volume:/home/banner_app/web/media
    env_file:
      - ./.env.prod

  celery-beat:
    build:
      context: ./banner_app
      dockerfile: Dockerfile.prod
    command: sh -c " celery -A banner_app beat --scheduler django_celery_beat.schedulers:DatabaseScheduler -P solo"
    volumes:
      - static_volume:/home/banner_app/web/static
      - media_volume:/home/banner_app/web/media
    depends_on:
      - web
      - db
      - redis
    hostname: celery_beat
    image: web-image
    networks:
      - main
    restart: on-failure
    env_file:
      - ./.env.prod

networks:
  main:

volumes:
  postgres_data:
  static_volume:
  media_volume: